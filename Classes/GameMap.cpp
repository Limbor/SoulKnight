#include "GameMap.h"
#include "SimpleAudioEngine.h"
#include<time.h>
#include <stdlib.h>
USING_NS_CC;

Layer* GameMap::createLayer()
{
    return GameMap::create();
}

GameMap * GameMap::createmap(int Number) {
	GameMap* enemy = new GameMap();
	if (enemy && enemy->init())
	{
		enemy->autorelease();
		enemy->enemyInit(Number);
		return enemy;
	}
	CC_SAFE_DELETE(enemy);
	return NULL;
 }

bool GameMap::init()
{
	if (!Layer::init())
	{
		return false;
	}
	return true;
}

void GameMap::enemyInit(int Number) {
	this->mapNumber = Number;
	if (mapNumber == 3) {
		int barrierMap[18][34] = {
			{ 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 },
		{ 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0 },
		{ 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0 },
		{ 0,0,0,0,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0 },
		{ 0,0,0,0,1,0,0,0,1,1,0,0,0,0,0,0,0,0,0,1,0,0,0,1,1,1,1,1,1,1,0,0,0,0 },
		{ 0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,1,1,1,1,1,1,0,0,0,0 },
		{ 0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,2,2,2,0,0,0,0,0,0,1,0,0,0,0 },
		{ 0,0,0,0,1,1,1,1,0,0,1,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0 },
		{ 0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0 },
		{ 0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,2,2,2,2,1,1,1,1,1,1,1,0,0,0,1,0,0,0,0 },
		{ 0,0,0,0,1,0,0,1,1,1,1,0,0,0,1,0,0,0,0,1,1,1,1,1,1,1,0,0,0,1,0,0,0,0 },
		{ 0,0,0,0,1,0,0,1,1,1,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,2,2,2,1,0,0,0,0 },
		{ 0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0 },
		{ 0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0 },
		{ 0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0 },
		{ 0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0 },
		{ 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 },
		{ 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 }
		};
		for (int i = 0; i < 18; i++) {
			for (int j = 0; j < 34; j++) {
				this->barrierMap[i][j] = barrierMap[i][j];
			}
		}
		int card[18][34] = {
		{ 1,2,1,2,1,2,2,2,1,1,2,2,2,1,2,2,2,2,1,2,2,2,2,1,1,1,1,2,2,2,2,2,2,2 },
		{ 2,5,3,5,3,5,5,5,3,3,5,5,5,3,5,5,5,5,3,5,5,5,5,3,3,3,3,5,5,5,5,5,5,2 },
		{ 1,6,11,6,6,7,6,11,11,6,7,6,6,7,7,11,11,11,6,6,6,11,11,6,6,11,6,11,11,6,11,6,6,1 },
		{ 1,11,7,11,11,9,11,7,7,6,6,8,8,8,6,11,11,11,11,7,7,8,6,7,6,11,11,7,11,11,11,6,6,2 },
		{ 1,6,7,6,7,11,11,8,13,13,7,7,8,7,7,11,7,7,11,9,7,7,7,6,6,8,9,9,9,9,11,6,6,2 },
		{ 2,6,7,6,11,11,11,7,14,14,11,11,11,11,11,11,10,9,9,11,11,11,9,13,13,13,13,13,13,9,9,9,6,1 },
		{ 1,6,7,11,11,11,6,7,11,12,12,12,11,11,12,11,6,9,11,11,18,18,18,14,14,14,14,14,14,11,11,9,9,2 },
		{ 2,6,8,11,11,13,13,13,7,11,11,12,11,11,12,12,11,11,11,9,12,12,12,8,8,11,7,10,10,6,6,9,6,2 },
		{ 2,6,8,11,11,14,14,14,11,11,11,11,11,11,11,12,12,7,7,12,12,12,7,8,8,11,11,12,10,6,8,9,6,1 },
		{ 1,6,6,6,11,11,11,10,10,12,12,7,7,7,11,18,18,18,18,12,9,12,12,8,10,11,11,12,12,8,8,9,6,1 },
		{ 1,6,7,9,11,11,11,8,10,12,11,11,9,7,7,12,11,12,12,13,13,13,13,13,13,13,11,11,12,8,6,9,6,2 },
		{ 2,9,9,9,13,7,12,12,13,13,13,7,7,11,7,11,11,11,7,14,14,14,14,14,14,14,18,18,18,8,6,9,6,2 },
		{ 2,6,9,9,14,11,7,9,14,14,14,12,12,11,12,12,12,12,8,7,11,8,11,11,11,11,10,12,8,6,6,6,6,2 },
		{ 1,6,6,6,7,9,7,13,9,7,9,7,6,11,12,12,10,10,10,10,11,8,8,9,7,6,10,12,8,6,6,6,6,2 },
		{ 1,6,6,6,6,6,9,14,9,6,6,9,9,9,8,8,8,8,8,8,8,8,6,6,7,9,10,9,6,6,6,6,6,1 },
		{ 2,6,6,6,6,6,6,6,9,6,6,6,8,6,9,9,6,6,6,6,8,8,6,7,6,6,6,9,9,6,6,6,6,2 },
		{ 1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1 },
		{ 5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5 }
		};
		Sprite* map[18][34];
		for (int i = 0; i < 18; i++) {
			for (int j = 0; j < 34; j++) {
				switch (card[17 - i][j]) {
				case 1:map[17 - i][j] = Sprite::create("1.png");
					map[17 - i][j]->setPosition(33 + 60 * j, 35 + 60 * i);
					addChild(map[17 - i][j]); break;
				case 2:map[17 - i][j] = Sprite::create("2.png");
					map[17 - i][j]->setPosition(33 + 60 * j, 35 + 60 * i);
					addChild(map[17 - i][j]); break;
				case 3:map[17 - i][j] = Sprite::create("3.png");
					map[17 - i][j]->setPosition(33 + 60 * j, 35 + 60 * i);
					addChild(map[17 - i][j]); break;
				case 4:map[17 - i][j] = Sprite::create("4.png");
					map[17 - i][j]->setPosition(33 + 60 * j, 35 + 60 * i);
					addChild(map[17 - i][j]); break;
				case 5:map[17 - i][j] = Sprite::create("5.png");
					map[17 - i][j]->setPosition(33 + 60 * j, 35 + 60 * i);
					addChild(map[17 - i][j]); break;
				case 6:map[17 - i][j] = Sprite::create("6.png");
					map[17 - i][j]->setPosition(33 + 60 * j, 35 + 60 * i);
					addChild(map[17 - i][j]); break;
				case 7:map[17 - i][j] = Sprite::create("7.png");
					map[17 - i][j]->setPosition(33 + 60 * j, 35 + 60 * i);
					addChild(map[17 - i][j]); break;
				case 8:map[17 - i][j] = Sprite::create("8.png");
					map[17 - i][j]->setPosition(33 + 60 * j, 35 + 60 * i);
					addChild(map[17 - i][j]); break;
				case 9:map[17 - i][j] = Sprite::create("9.png");
					map[17 - i][j]->setPosition(33 + 60 * j, 35 + 60 * i);
					addChild(map[17 - i][j]); break;
				case 10:map[17 - i][j] = Sprite::create("10.png");
					map[17 - i][j]->setPosition(33 + 60 * j, 35 + 60 * i);
					addChild(map[17 - i][j]); break;
				case 11:map[17 - i][j] = Sprite::create("11.png");
					map[17 - i][j]->setPosition(33 + 60 * j, 35 + 60 * i);
					addChild(map[17 - i][j]); break;
				case 12:map[17 - i][j] = Sprite::create("12.png");
					map[17 - i][j]->setPosition(33 + 60 * j, 35 + 60 * i);
					addChild(map[17 - i][j]); break;
				case 13:map[17 - i][j] = Sprite::create("13.png");
					map[17 - i][j]->setPosition(33 + 60 * j, 35 + 60 * i);
					addChild(map[17 - i][j]); break;
				case 14:map[17 - i][j] = Sprite::create("14.png");
					map[17 - i][j]->setPosition(33 + 60 * j, 35 + 60 * i);
					addChild(map[17 - i][j]); break;
				case 15:map[17 - i][j] = Sprite::create("15.png");
					map[17 - i][j]->setPosition(33 + 60 * j, 35 + 60 * i);
					addChild(map[17 - i][j]); break;
				case 16:map[17 - i][j] = Sprite::create("16.png");
					map[17 - i][j]->setPosition(33 + 60 * j, 35 + 60 * i);
					addChild(map[17 - i][j]); break;
				case 17:map[17 - i][j] = Sprite::create("17.png");
					map[17 - i][j]->setPosition(33 + 60 * j, 35 + 60 * i);
					addChild(map[17 - i][j]); break;
				case 18:map[17 - i][j] = Sprite::create("18.png");
					map[17 - i][j]->setPosition(33 + 60 * j, 35 + 60 * i);
					addChild(map[17 - i][j]); break;
				}
			}
		}
	}
	if (mapNumber == 4) {
		int barrierMap[18][34] = {
			{ 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 },
		{ 0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0 },
		{ 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 },
		{ 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 },
		{ 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 },
		{ 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 },
		{ 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 },
		{ 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 },
		{ 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 },
		{ 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 },
		{ 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 },
		{ 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 },
		{ 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 },
		{ 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 },
		{ 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 },
		{ 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 },
		{ 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 },
		{ 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 }
		};
		for (int i = 0; i < 18; i++) {
			for (int j = 0; j < 34; j++) {
				this->barrierMap[i][j] = barrierMap[i][j];
			}
		}
		int card[18][34] = {
		{ 1,2,1,2,1,2,2,2,1,1,2,2,2,1,2,2,2,2,1,2,2,2,2,1,1,1,1,2,2,2,2,2,2,2 },
		{ 2,27,5,5,3,5,5,5,15,3,5,5,5,3,5,15,5,5,15,5,5,5,5,3,3,15,3,5,5,5,5,5,27,2 },
		{ 1,26,7,7,7,7,7,7,16,7,7,7,7,7,7,16,7,7,16,7,7,7,7,7,7,16,7,7,7,7,7,7,26,1 },
		{ 1,7,7,8,8,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,9,9,7,7,2 },
		{ 1,7,8,25,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,24,9,7,2 },
		{ 2,8,8,20,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,20,9,9,1 },
		{ 1,8,7,20,31,31,7,7,7,7,31,31,7,7,7,7,31,31,7,7,7,7,31,31,7,7,7,7,31,31,20,7,9,2 },
		{ 2,7,7,20,31,31,31,31,31,7,31,31,7,31,31,7,31,31,7,31,31,7,31,31,7,31,31,7,31,31,20,7,7,2 },
		{ 2,7,7,20,31,31,31,31,31,7,31,31,7,31,31,7,31,31,7,31,31,7,31,31,7,31,31,7,31,31,20,7,7,1 },
		{ 1,7,7,20,31,31,7,7,7,7,31,31,7,31,31,7,31,31,7,7,7,7,31,31,7,31,31,7,31,31,20,7,7,1 },
		{ 1,7,7,20,31,31,31,31,31,7,31,31,7,31,31,7,31,31,31,31,31,7,31,31,7,31,31,7,31,31,20,7,7,2 },
		{ 2,7,7,20,31,31,31,31,31,7,31,31,7,31,31,7,31,31,31,31,31,7,31,31,7,31,31,7,31,31,20,7,7,2 },
		{ 2,10,10,20,31,31,7,7,7,7,31,31,7,7,7,7,31,31,7,7,7,7,31,31,7,7,7,7,31,31,20,10,10,2 },
		{ 1,10,10,20,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,20,10,10,2 },
		{ 1,10,10,21,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,23,10,10,1 },
		{ 2,10,10,10,10,10,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,10,10,10,10,10,2 },
		{ 1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1 },
		{ 5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5 }
		};
		Sprite* map[18][34];
		for (int i = 0; i < 18; i++) {
			for (int j = 0; j < 34; j++) {
				switch (card[17 - i][j]) {
				case 1:map[17 - i][j] = Sprite::create("1.png");
					map[17 - i][j]->setPosition(33 + 60 * j, 35 + 60 * i);
					addChild(map[17 - i][j]); break;
				case 2:map[17 - i][j] = Sprite::create("2.png");
					map[17 - i][j]->setPosition(33 + 60 * j, 35 + 60 * i);
					addChild(map[17 - i][j]); break;
				case 3:map[17 - i][j] = Sprite::create("3.png");
					map[17 - i][j]->setPosition(33 + 60 * j, 35 + 60 * i);
					addChild(map[17 - i][j]); break;
				case 4:map[17 - i][j] = Sprite::create("4.png");
					map[17 - i][j]->setPosition(33 + 60 * j, 35 + 60 * i);
					addChild(map[17 - i][j]); break;
				case 5:map[17 - i][j] = Sprite::create("5.png");
					map[17 - i][j]->setPosition(33 + 60 * j, 35 + 60 * i);
					addChild(map[17 - i][j]); break;
				case 6:map[17 - i][j] = Sprite::create("6.png");
					map[17 - i][j]->setPosition(33 + 60 * j, 35 + 60 * i);
					addChild(map[17 - i][j]); break;
				case 7:map[17 - i][j] = Sprite::create("7.png");
					map[17 - i][j]->setPosition(33 + 60 * j, 35 + 60 * i);
					addChild(map[17 - i][j]); break;
				case 8:map[17 - i][j] = Sprite::create("8.png");
					map[17 - i][j]->setPosition(33 + 60 * j, 35 + 60 * i);
					addChild(map[17 - i][j]); break;
				case 9:map[17 - i][j] = Sprite::create("9.png");
					map[17 - i][j]->setPosition(33 + 60 * j, 35 + 60 * i);
					addChild(map[17 - i][j]); break;
				case 10:map[17 - i][j] = Sprite::create("10.png");
					map[17 - i][j]->setPosition(33 + 60 * j, 35 + 60 * i);
					addChild(map[17 - i][j]); break;
				case 11:map[17 - i][j] = Sprite::create("11.png");
					map[17 - i][j]->setPosition(33 + 60 * j, 35 + 60 * i);
					addChild(map[17 - i][j]); break;
				case 12:map[17 - i][j] = Sprite::create("12.png");
					map[17 - i][j]->setPosition(33 + 60 * j, 35 + 60 * i);
					addChild(map[17 - i][j]); break;
				case 13:map[17 - i][j] = Sprite::create("13.png");
					map[17 - i][j]->setPosition(33 + 60 * j, 35 + 60 * i);
					addChild(map[17 - i][j]); break;
				case 14:map[17 - i][j] = Sprite::create("14.png");
					map[17 - i][j]->setPosition(33 + 60 * j, 35 + 60 * i);
					addChild(map[17 - i][j]); break;
				case 15:map[17 - i][j] = Sprite::create("15.png");
					map[17 - i][j]->setPosition(33 + 60 * j, 35 + 60 * i);
					addChild(map[17 - i][j]); break;
				case 16:map[17 - i][j] = Sprite::create("16.png");
					map[17 - i][j]->setPosition(33 + 60 * j, 35 + 60 * i);
					addChild(map[17 - i][j]); break;
				case 17:map[17 - i][j] = Sprite::create("17.png");
					map[17 - i][j]->setPosition(33 + 60 * j, 35 + 60 * i);
					addChild(map[17 - i][j]); break;
				case 18:map[17 - i][j] = Sprite::create("18.png");
					map[17 - i][j]->setPosition(33 + 60 * j, 35 + 60 * i);
					addChild(map[17 - i][j]); break;
				case 19:map[17 - i][j] = Sprite::create("19.png");
					map[17 - i][j]->setPosition(33 + 60 * j, 35 + 60 * i);
					addChild(map[17 - i][j]); break;
				case 20:map[17 - i][j] = Sprite::create("20.png");
					map[17 - i][j]->setPosition(33 + 60 * j, 35 + 60 * i);
					addChild(map[17 - i][j]); break;
				case 21:map[17 - i][j] = Sprite::create("21.png");
					map[17 - i][j]->setPosition(33 + 60 * j, 35 + 60 * i);
					addChild(map[17 - i][j]); break;
				case 22:map[17 - i][j] = Sprite::create("22.png");
					map[17 - i][j]->setPosition(33 + 60 * j, 35 + 60 * i);
					addChild(map[17 - i][j]); break;
				case 23:map[17 - i][j] = Sprite::create("23.png");
					map[17 - i][j]->setPosition(33 + 60 * j, 35 + 60 * i);
					addChild(map[17 - i][j]); break;
				case 24:map[17 - i][j] = Sprite::create("24.png");
					map[17 - i][j]->setPosition(33 + 60 * j, 35 + 60 * i);
					addChild(map[17 - i][j]); break;
				case 25:map[17 - i][j] = Sprite::create("25.png");
					map[17 - i][j]->setPosition(33 + 60 * j, 35 + 60 * i);
					addChild(map[17 - i][j]); break;
				case 26:map[17 - i][j] = Sprite::create("26.png");
					map[17 - i][j]->setPosition(33 + 60 * j, 35 + 60 * i);
					addChild(map[17 - i][j]); break;
				case 27:map[17 - i][j] = Sprite::create("27.png");
					map[17 - i][j]->setPosition(33 + 60 * j, 35 + 60 * i);
					addChild(map[17 - i][j]); break;
				case 28:map[17 - i][j] = Sprite::create("28.png");
					map[17 - i][j]->setPosition(33 + 60 * j, 35 + 60 * i);
					addChild(map[17 - i][j]); break;
				case 29:map[17 - i][j] = Sprite::create("29.png");
					map[17 - i][j]->setPosition(33 + 60 * j, 35 + 60 * i);
					addChild(map[17 - i][j]); break;
				case 30:map[17 - i][j] = Sprite::create("30.png");
					map[17 - i][j]->setPosition(33 + 60 * j, 35 + 60 * i);
					addChild(map[17 - i][j]); break;
				case 31:map[17 - i][j] = Sprite::create("31.png");
					map[17 - i][j]->setPosition(33 + 60 * j, 35 + 60 * i);
					addChild(map[17 - i][j]); break;
				}
			}
		}
	}
	if (mapNumber == 1) {
		int barrierMap[18][34] = {
			{ 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 },
		{ 0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 },
		{ 0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 },
		{ 0,0,1,1,0,0,0,0,0,0,0,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0 },
		{ 0,0,0,1,1,0,0,0,0,0,1,1,1,1,1,1,1,1,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0 },
		{ 0,0,0,0,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0 },
		{ 0,0,0,0,0,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,1,0,0,0 },
		{ 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,1,1,1,1,1,0,0,0 },
		{ 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0 },
		{ 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,1,1,1,1,1,0,0,0 },
		{ 0,0,0,0,0,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,1,0,0,0 },
		{ 0,0,0,0,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,1,0,0,0 },
		{ 0,0,0,1,1,0,0,0,0,0,1,1,1,1,1,1,1,1,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0 },
		{ 0,0,1,1,0,0,0,0,0,0,0,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0 },
		{ 0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 },
		{ 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 },
		{ 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 },
		{ 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 }
		};
		for (int i = 0; i < 18; i++) {
			for (int j = 0; j < 34; j++) {
				this->barrierMap[i][j] = barrierMap[i][j];
			}
		}
		int card[18][34] = {
		{ 2,2,4,2,4,4,2,4,4,4,4,4,4,4,4,4,4,2,4,4,2,2,2,4,4,4,2,4,2,4,4,4,4,2 },
		{ 4,16,15,16,15,17,15,15,17,17,15,17,17,15,17,17,15,16,15,15,16,16,16,15,17,17,16,17,16,15,15,15,15,4 },
		{ 4,35,13,12,13,12,11,11,12,12,11,12,12,11,12,12,11,13,5,11,13,13,13,11,12,12,11,12,13,11,13,11,13,4 },
		{ 4,34,35,11,12,11,11,13,13,11,11,11,11,13,11,11,11,5,5,13,5,5,12,13,11,11,11,13,12,13,12,11,12,4 },
		{ 4,11,34,35,11,11,11,12,12,11,11,35,35,35,35,35,35,35,5,12,5,12,13,12,11,13,11,12,13,5,11,11,11,4 },
		{ 4,11,11,34,35,11,11,11,11,11,35,34,34,34,34,34,34,34,5,13,5,13,12,11,13,12,13,11,5,5,11,11,13,4 },
		{ 4,11,13,8,34,35,35,35,35,35,34,13,11,5,5,11,5,5,5,5,12,5,5,11,12,13,5,11,12,5,11,11,5,4 },
		{ 4,13,12,8,13,34,34,34,34,34,11,5,11,12,5,11,5,12,5,12,13,12,5,11,11,12,5,11,13,5,13,11,5,2 },
		{ 4,12,11,8,12,11,8,8,11,12,13,5,11,13,5,11,5,11,5,13,5,13,5,11,11,11,12,5,13,11,5,11,5,4 },
		{ 4,11,11,12,13,11,8,8,11,11,12,5,11,5,5,13,5,11,5,5,12,5,5,11,24,24,26,26,24,24,5,11,5,4 },
		{ 4,10,11,11,12,11,8,5,11,11,11,5,11,12,5,12,5,11,12,5,13,12,5,11,23,23,25,25,23,23,12,13,5,2 },
		{ 4,9,11,11,11,35,35,35,35,35,11,5,11,13,5,11,12,11,11,5,5,13,5,24,11,11,5,12,11,11,11,5,5,4 },
		{ 4,8,11,11,35,34,34,34,34,34,35,5,11,5,12,11,11,11,11,5,12,5,26,23,11,11,12,11,13,11,11,5,5,2 },
		{ 4,7,13,35,34,11,5,12,13,13,34,35,35,35,35,35,35,35,11,5,13,5,25,11,11,11,13,11,12,11,26,5,12,4 },
		{ 4,35,35,34,13,12,12,13,12,12,12,34,34,34,34,34,34,34,11,13,11,13,11,11,5,5,5,11,11,13,25,5,11,4 },
		{ 4,34,34,12,12,13,13,12,13,13,13,12,13,13,12,13,13,12,13,5,13,5,13,13,5,5,5,13,13,5,13,5,13,2 },
		{ 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 },
		{ 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 } };
		Sprite* map[18][34];
		for (int i = 0; i < 18; i++) {
			for (int j = 0; j < 34; j++) {
				switch (card[17 - i][j]) {
				case 1:map[17 - i][j] = Sprite::create("1.wall1.png");
					map[17 - i][j]->setPosition(33 + 60 * j, 35 + 60 * i);
					addChild(map[17 - i][j]); break;
				case 2:map[17 - i][j] = Sprite::create("2.wall2.png");
					map[17 - i][j]->setPosition(33 + 60 * j, 35 + 60 * i);
					addChild(map[17 - i][j]); break;
				case 3:map[17 - i][j] = Sprite::create("3.grass1.png");
					map[17 - i][j]->setPosition(33 + 60 * j, 35 + 60 * i);
					addChild(map[17 - i][j]); break;
				case 4:map[17 - i][j] = Sprite::create("4.grass2.png");
					map[17 - i][j]->setPosition(33 + 60 * j, 35 + 60 * i);
					addChild(map[17 - i][j]); break;
				case 5:map[17 - i][j] = Sprite::create("5.floor1.png");
					map[17 - i][j]->setPosition(33 + 60 * j, 35 + 60 * i);
					addChild(map[17 - i][j]); break;
				case 6:map[17 - i][j] = Sprite::create("6.floor2.png");
					map[17 - i][j]->setPosition(33 + 60 * j, 35 + 60 * i);
					addChild(map[17 - i][j]); break;
				case 7:map[17 - i][j] = Sprite::create("7.floor3.png");
					map[17 - i][j]->setPosition(33 + 60 * j, 35 + 60 * i);
					addChild(map[17 - i][j]); break;
				case 8:map[17 - i][j] = Sprite::create("8.floor4.png");
					map[17 - i][j]->setPosition(33 + 60 * j, 35 + 60 * i);
					addChild(map[17 - i][j]); break;
				case 9:map[17 - i][j] = Sprite::create("9.floor5.png");
					map[17 - i][j]->setPosition(33 + 60 * j, 35 + 60 * i);
					addChild(map[17 - i][j]); break;
				case 10:map[17 - i][j] = Sprite::create("10.floor6.png");
					map[17 - i][j]->setPosition(33 + 60 * j, 35 + 60 * i);
					addChild(map[17 - i][j]); break;
				case 11:map[17 - i][j] = Sprite::create("11.floor7.png");
					map[17 - i][j]->setPosition(33 + 60 * j, 35 + 60 * i);
					addChild(map[17 - i][j]); break;
				case 12:map[17 - i][j] = Sprite::create("12.floor8.png");
					map[17 - i][j]->setPosition(33 + 60 * j, 35 + 60 * i);
					addChild(map[17 - i][j]); break;
				case 13:map[17 - i][j] = Sprite::create("13.floor9.png");
					map[17 - i][j]->setPosition(33 + 60 * j, 35 + 60 * i);
					addChild(map[17 - i][j]); break;
				case 14:map[17 - i][j] = Sprite::create("14.wall3.png");
					map[17 - i][j]->setPosition(33 + 60 * j, 35 + 60 * i);
					addChild(map[17 - i][j]); break;
				case 15:map[17 - i][j] = Sprite::create("15.gress3.png");
					map[17 - i][j]->setPosition(33 + 60 * j, 35 + 60 * i);
					addChild(map[17 - i][j]); break;
				case 16:map[17 - i][j] = Sprite::create("16.wall4.png");
					map[17 - i][j]->setPosition(33 + 60 * j, 35 + 60 * i);
					addChild(map[17 - i][j]); break;
				case 17:map[17 - i][j] = Sprite::create("17.grass4.png");
					map[17 - i][j]->setPosition(33 + 60 * j, 35 + 60 * i);
					addChild(map[17 - i][j]); break;
				case 18:map[17 - i][j] = Sprite::create("18.fire1.png");
					map[17 - i][j]->setPosition(33 + 60 * j, 35 + 60 * i);
					addChild(map[17 - i][j]); break;
				case 19:map[17 - i][j] = Sprite::create("19.fire2.png");
					map[17 - i][j]->setPosition(33 + 60 * j, 35 + 60 * i);
					addChild(map[17 - i][j]); break;
				case 20:map[17 - i][j] = Sprite::create("20.fire3.png");
					map[17 - i][j]->setPosition(33 + 60 * j, 35 + 60 * i);
					addChild(map[17 - i][j]); break;
				case 21:map[17 - i][j] = Sprite::create("21.tree1.png");
					map[17 - i][j]->setPosition(33 + 60 * j, 35 + 60 * i);
					addChild(map[17 - i][j]); break;
				case 22:map[17 - i][j] = Sprite::create("22.tree2.png");
					map[17 - i][j]->setPosition(33 + 60 * j, 35 + 60 * i);
					addChild(map[17 - i][j]); break;
				case 23:map[17 - i][j] = Sprite::create("23.box1.png");
					map[17 - i][j]->setPosition(33 + 60 * j, 35 + 60 * i);
					addChild(map[17 - i][j]); break;
				case 24:map[17 - i][j] = Sprite::create("24.box2.png");
					map[17 - i][j]->setPosition(33 + 60 * j, 35 + 60 * i);
					addChild(map[17 - i][j]); break;
				case 25:map[17 - i][j] = Sprite::create("25.stone1.png");
					map[17 - i][j]->setPosition(33 + 60 * j, 35 + 60 * i);
					addChild(map[17 - i][j]); break;
				case 26:map[17 - i][j] = Sprite::create("26.stone2.png");
					map[17 - i][j]->setPosition(33 + 60 * j, 35 + 60 * i);
					addChild(map[17 - i][j]); break;
				case 34:map[17 - i][j] = Sprite::create("34.png");
					map[17 - i][j]->setPosition(33 + 60 * j, 35 + 60 * i);
					addChild(map[17 - i][j]); break;
				case 35:map[17 - i][j] = Sprite::create("35.png");
					map[17 - i][j]->setPosition(33 + 60 * j, 35 + 60 * i);
					addChild(map[17 - i][j]); break;
				}
			}
		}
	}
	if (mapNumber == 2) {
		int barrierMap[18][34] = {
		{ 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 },
		{ 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 },
		{ 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 },
		{ 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 },
		{ 0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0 },
		{ 0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0 },
		{ 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 },
		{ 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 },
		{ 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 },
		{ 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 },
		{ 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 },
		{ 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 },
		{ 0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0 },
		{ 0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0 },
		{ 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 },
		{ 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 },
		{ 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 },
		{ 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 }
		};
		for (int i = 0; i < 18; i++) {
			for (int j = 0; j < 34; j++) {
				this->barrierMap[i][j] = barrierMap[i][j];
			}
		}
		int card[18][34] = {
		{ 4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4 },
		{ 4,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,4 },
		{ 4,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,4 },
		{ 4,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,4 },
		{ 4,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,4 },
		{ 4,5,5,5,11,11,11,11,11,24,24,11,11,11,11,11,5,5,11,11,11,11,11,24,24,11,11,11,11,11,5,5,5,4 },
		{ 4,5,5,5,5,5,5,5,11,23,23,11,5,5,5,11,5,5,11,5,5,5,11,23,23,11,5,5,5,11,5,5,5,4 },
		{ 4,5,5,5,5,5,5,5,11,5,5,11,5,5,5,11,5,5,11,5,5,5,11,5,5,11,5,5,5,11,5,5,5,4 },
		{ 4,5,5,5,5,5,5,5,11,5,5,11,5,5,5,11,5,5,11,5,5,5,11,5,5,11,5,5,5,11,5,5,5,4 },
		{ 4,5,5,5,11,11,11,11,11,5,5,11,5,5,5,11,5,5,11,11,11,11,11,5,5,11,5,5,5,11,5,5,5,4 },
		{ 4,5,5,5,5,5,5,5,11,5,5,11,5,5,5,11,5,5,5,5,5,5,11,5,5,11,5,5,5,11,5,5,5,4 },
		{ 4,5,5,5,5,5,5,5,11,5,5,11,5,5,5,11,5,5,5,5,5,5,11,5,5,11,5,5,5,11,5,5,5,4 },
		{ 4,5,5,5,5,5,5,5,11,5,5,11,5,5,5,11,5,5,5,5,5,5,11,5,5,11,5,5,5,11,5,5,5,4 },
		{ 4,5,5,5,11,11,11,11,11,26,26,11,11,11,11,11,5,5,11,11,11,11,11,26,26,11,11,11,11,11,5,5,5,4 },
		{ 4,5,5,5,5,5,5,5,5,25,25,5,5,5,5,5,5,5,5,5,5,5,5,25,25,5,5,5,5,5,5,5,5,4 },
		{ 4,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,4 },
		{ 4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4 },
		{ 3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3 }
		};
		Sprite* map[18][34];
		for (int i = 0; i < 18; i++) {
			for (int j = 0; j < 34; j++) {
				switch (card[17 - i][j]) {
				case 1:map[17 - i][j] = Sprite::create("1.wall1.png");
					map[17 - i][j]->setPosition(33 + 60 * j, 35 + 60 * i);
					addChild(map[17 - i][j]); break;
				case 2:map[17 - i][j] = Sprite::create("2.wall2.png");
					map[17 - i][j]->setPosition(33 + 60 * j, 35 + 60 * i);
					addChild(map[17 - i][j]); break;
				case 3:map[17 - i][j] = Sprite::create("3.grass1.png");
					map[17 - i][j]->setPosition(33 + 60 * j, 35 + 60 * i);
					addChild(map[17 - i][j]); break;
				case 4:map[17 - i][j] = Sprite::create("4.grass2.png");
					map[17 - i][j]->setPosition(33 + 60 * j, 35 + 60 * i);
					addChild(map[17 - i][j]); break;
				case 5:map[17 - i][j] = Sprite::create("5.floor1.png");
					map[17 - i][j]->setPosition(33 + 60 * j, 35 + 60 * i);
					addChild(map[17 - i][j]); break;
				case 6:map[17 - i][j] = Sprite::create("6.floor2.png");
					map[17 - i][j]->setPosition(33 + 60 * j, 35 + 60 * i);
					addChild(map[17 - i][j]); break;
				case 7:map[17 - i][j] = Sprite::create("7.floor3.png");
					map[17 - i][j]->setPosition(33 + 60 * j, 35 + 60 * i);
					addChild(map[17 - i][j]); break;
				case 8:map[17 - i][j] = Sprite::create("8.floor4.png");
					map[17 - i][j]->setPosition(33 + 60 * j, 35 + 60 * i);
					addChild(map[17 - i][j]); break;
				case 9:map[17 - i][j] = Sprite::create("9.floor5.png");
					map[17 - i][j]->setPosition(33 + 60 * j, 35 + 60 * i);
					addChild(map[17 - i][j]); break;
				case 10:map[17 - i][j] = Sprite::create("10.floor6.png");
					map[17 - i][j]->setPosition(33 + 60 * j, 35 + 60 * i);
					addChild(map[17 - i][j]); break;
				case 11:map[17 - i][j] = Sprite::create("11.floor7.png");
					map[17 - i][j]->setPosition(33 + 60 * j, 35 + 60 * i);
					addChild(map[17 - i][j]); break;
				case 12:map[17 - i][j] = Sprite::create("12.floor8.png");
					map[17 - i][j]->setPosition(33 + 60 * j, 35 + 60 * i);
					addChild(map[17 - i][j]); break;
				case 13:map[17 - i][j] = Sprite::create("13.floor9.png");
					map[17 - i][j]->setPosition(33 + 60 * j, 35 + 60 * i);
					addChild(map[17 - i][j]); break;
				case 14:map[17 - i][j] = Sprite::create("14.wall3.png");
					map[17 - i][j]->setPosition(33 + 60 * j, 35 + 60 * i);
					addChild(map[17 - i][j]); break;
				case 15:map[17 - i][j] = Sprite::create("15.gress3.png");
					map[17 - i][j]->setPosition(33 + 60 * j, 35 + 60 * i);
					addChild(map[17 - i][j]); break;
				case 16:map[17 - i][j] = Sprite::create("16.wall4.png");
					map[17 - i][j]->setPosition(33 + 60 * j, 35 + 60 * i);
					addChild(map[17 - i][j]); break;
				case 17:map[17 - i][j] = Sprite::create("17.grass4.png");
					map[17 - i][j]->setPosition(33 + 60 * j, 35 + 60 * i);
					addChild(map[17 - i][j]); break;
				case 18:map[17 - i][j] = Sprite::create("18.fire1.png");
					map[17 - i][j]->setPosition(33 + 60 * j, 35 + 60 * i);
					addChild(map[17 - i][j]); break;
				case 19:map[17 - i][j] = Sprite::create("19.fire2.png");
					map[17 - i][j]->setPosition(33 + 60 * j, 35 + 60 * i);
					addChild(map[17 - i][j]); break;
				case 20:map[17 - i][j] = Sprite::create("20.fire3.png");
					map[17 - i][j]->setPosition(33 + 60 * j, 35 + 60 * i);
					addChild(map[17 - i][j]); break;
				case 21:map[17 - i][j] = Sprite::create("21.tree1.png");
					map[17 - i][j]->setPosition(33 + 60 * j, 35 + 60 * i);
					addChild(map[17 - i][j]); break;
				case 22:map[17 - i][j] = Sprite::create("22.tree2.png");
					map[17 - i][j]->setPosition(33 + 60 * j, 35 + 60 * i);
					addChild(map[17 - i][j]); break;
				case 23:map[17 - i][j] = Sprite::create("23.box1.png");
					map[17 - i][j]->setPosition(33 + 60 * j, 35 + 60 * i);
					addChild(map[17 - i][j]); break;
				case 24:map[17 - i][j] = Sprite::create("24.box2.png");
					map[17 - i][j]->setPosition(33 + 60 * j, 35 + 60 * i);
					addChild(map[17 - i][j]); break;
				case 25:map[17 - i][j] = Sprite::create("25.stone1.png");
					map[17 - i][j]->setPosition(33 + 60 * j, 35 + 60 * i);
					addChild(map[17 - i][j]); break;
				case 26:map[17 - i][j] = Sprite::create("26.stone2.png");
					map[17 - i][j]->setPosition(33 + 60 * j, 35 + 60 * i);
					addChild(map[17 - i][j]); break;
				case 34:map[17 - i][j] = Sprite::create("34.png");
					map[17 - i][j]->setPosition(33 + 60 * j, 35 + 60 * i);
					addChild(map[17 - i][j]); break;
				case 35:map[17 - i][j] = Sprite::create("35.png");
					map[17 - i][j]->setPosition(33 + 60 * j, 35 + 60 * i);
					addChild(map[17 - i][j]); break;
				}
			}
		}
	}
	if (mapNumber == 5) {
		int barrierMap[18][34] = {
		{ 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 },
		{ 0,1,1,1,1,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 },
		{ 0,1,1,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0 },
		{ 0,1,1,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0 },
		{ 0,1,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0 },
		{ 0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0 },
		{ 0,0,0,0,0,0,1,1,0,0,0,0,0,0,1,1,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0 },
		{ 0,0,0,0,0,1,1,0,0,0,0,0,0,1,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0 },
		{ 0,0,0,0,1,1,0,0,0,0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0 },
		{ 0,0,0,1,1,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0 },
		{ 0,0,0,1,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0 },
		{ 0,0,0,1,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0 },
		{ 0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0 },
		{ 0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0 },
		{ 0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0 },
		{ 0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0 },
		{ 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 },
		{ 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 }
		};
		for (int i = 0; i < 18; i++) {
			for (int j = 0; j < 34; j++) {
				this->barrierMap[i][j] = barrierMap[i][j];
			}
		}
		int card[18][34] = {
			{1,2,2,2,1,2,2,2,1,2,2,1,1,1,2,2,1,1,1,1,2,2,1,1,1,2,1,2,1,1,1,2,2,1},
		{1,19,19,19,19,4,4,5,4,24,2,4,5,4,3,4,3,3,3,3,3,3,4,4,4,4,4,4,4,4,3,3,3,2},
		{1,19,19,19,20,12,12,12,12,23,2,12,12,12,12,12,12,12,6,12,21,11,12,12,12,12,12,12,12,12,12,12,11,1},
		{2,19,19,20,12,12,12,12,12,12,2,12,12,12,12,12,12,12,12,12,21,12,12,11,12,12,12,12,12,12,11,12,12,1},
		{2,19,20,12,12,12,12,12,12,2,4,12,12,12,12,12,12,12,12,12,21,12,12,12,12,11,12,12,11,12,12,12,12,1},
		{2,20,12,12,12,12,12,12,2,4,12,12,12,12,12,12,12,12,12,12,21,12,12,11,12,12,12,12,12,12,11,12,12,2},
		{1,12,12,12,12,12,12,2,4,12,12,12,12,12,12,2,12,12,12,12,12,11,12,12,12,12,12,12,12,12,12,12,11,1},
		{1,12,12,12,12,12,2,4,12,12,12,12,12,12,2,4,12,12,12,12,19,12,12,12,12,12,12,12,12,12,12,12,12,2},
		{2,12,12,12,12,2,4,12,12,12,12,12,12,2,4,12,12,12,12,12,19,12,12,12,12,12,12,12,12,11,11,12,12,1},
		{1,12,12,12,2,4,12,12,12,12,12,12,2,4,12,12,12,12,12,12,19,12,12,11,11,12,12,11,12,11,11,12,11,2},
		{2,12,12,2,4,12,12,12,12,12,12,2,4,12,12,12,12,12,12,12,19,12,12,11,11,12,11,11,11,11,11,11,11,2},
		{2,12,12,24,12,12,12,12,12,12,2,4,12,12,12,12,12,12,12,12,19,11,11,11,11,11,11,12,12,11,11,12,12,1},
		{1,12,12,23,12,12,12,12,12,2,4,12,12,12,12,12,12,12,12,12,19,11,12,11,11,12,12,12,12,11,11,12,12,2},
		{2,12,12,12,12,12,12,12,2,4,12,12,12,12,12,12,12,12,12,12,19,12,12,11,11,11,12,12,11,11,11,11,12,2},
		{1,12,12,12,12,12,12,2,4,12,12,12,12,12,12,12,12,12,12,12,19,12,11,11,12,11,12,12,11,12,12,11,12,1},
		{1,12,12,12,12,12,12,2,12,12,12,12,12,12,12,12,12,12,12,12,19,12,12,12,12,12,12,12,12,12,12,12,12,2},
		{2,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,1},
		{22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22}
		};
		Sprite* map[18][34];
		for (int i = 0; i < 18; i++) {
			for (int j = 0; j < 34; j++) {
				switch (card[17 - i][j]) {
				case 1:map[17 - i][j] = Sprite::create("1.1.png");
					map[17 - i][j]->setPosition(33 + 60 * j, 35 + 60 * i);
					addChild(map[17 - i][j]); break;
				case 2:map[17 - i][j] = Sprite::create("1.2.png");
					map[17 - i][j]->setPosition(33 + 60 * j, 35 + 60 * i);
					addChild(map[17 - i][j]); break;
				case 3:map[17 - i][j] = Sprite::create("1.3.png");
					map[17 - i][j]->setPosition(33 + 60 * j, 35 + 60 * i);
					addChild(map[17 - i][j]); break;
				case 4:map[17 - i][j] = Sprite::create("1.4.png");
					map[17 - i][j]->setPosition(33 + 60 * j, 35 + 60 * i);
					addChild(map[17 - i][j]); break;
				case 5:map[17 - i][j] = Sprite::create("1.5.png");
					map[17 - i][j]->setPosition(33 + 60 * j, 35 + 60 * i);
					addChild(map[17 - i][j]); break;
				case 6:map[17 - i][j] = Sprite::create("1.6.png");
					map[17 - i][j]->setPosition(33 + 60 * j, 35 + 60 * i);
					addChild(map[17 - i][j]); break;
				case 11:map[17 - i][j] = Sprite::create("1.11.png");
					map[17 - i][j]->setPosition(33 + 60 * j, 35 + 60 * i);
					addChild(map[17 - i][j]); break;
				case 12:map[17 - i][j] = Sprite::create("1.12.png");
					map[17 - i][j]->setPosition(33 + 60 * j, 35 + 60 * i);
					addChild(map[17 - i][j]); break;
				case 19:map[17 - i][j] = Sprite::create("1.19.png");
					map[17 - i][j]->setPosition(33 + 60 * j, 35 + 60 * i);
					addChild(map[17 - i][j]); break;
				case 20:map[17 - i][j] = Sprite::create("1.20.png");
					map[17 - i][j]->setPosition(33 + 60 * j, 35 + 60 * i);
					addChild(map[17 - i][j]); break;
				case 21:map[17 - i][j] = Sprite::create("1.21.png");
					map[17 - i][j]->setPosition(33 + 60 * j, 35 + 60 * i);
					addChild(map[17 - i][j]); break;
				case 22:map[17 - i][j] = Sprite::create("1.22.png");
					map[17 - i][j]->setPosition(33 + 60 * j, 35 + 60 * i);
					addChild(map[17 - i][j]); break;
				case 23:map[17 - i][j] = Sprite::create("1.23.png");
					map[17 - i][j]->setPosition(33 + 60 * j, 35 + 60 * i);
					addChild(map[17 - i][j]); break;
				case 24:map[17 - i][j] = Sprite::create("1.24.png");
					map[17 - i][j]->setPosition(33 + 60 * j, 35 + 60 * i);
					addChild(map[17 - i][j]); break;
				}
			}
		}
	}
	if (mapNumber == 6) {
		int barrierMap[18][34] = {
			{ 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 },
		{ 0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0 },
		{ 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 },
		{ 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 },
		{ 0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0 },
		{ 0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0 },
		{ 0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0 },
		{ 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 },
		{ 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 },
		{ 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 },
		{ 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 },
		{ 0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0 },
		{ 0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0 },
		{ 0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0 },
		{ 0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0 },
		{ 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 },
		{ 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 },
		{ 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 }
		};
		for (int i = 0; i < 18; i++) {
			for (int j = 0; j < 34; j++) {
				this->barrierMap[i][j] = barrierMap[i][j];
			}
		}
		int card[18][34] = {
		{ 1,2,2,2,1,2,2,2,1,2,2,1,1,1,2,2,1,1,1,1,2,2,1,1,1,2,1,2,1,1,1,2,2,1 },
		{ 1,24,5,5,5,5,4,5,4,5,5,4,5,4,3,4,3,3,3,3,3,3,4,4,4,4,4,4,4,4,3,3,24,2 },
		{ 1,23,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,6,12,12,12,12,12,12,12,12,12,12,12,12,12,23,1 },
		{ 2,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,1 },
		{ 2,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,1 },
		{ 2,12,12,12,11,11,11,19,11,12,12,11,11,11,11,11,12,12,11,2,11,11,11,12,12,11,11,11,11,11,12,12,12,2 },
		{ 1,12,12,12,12,12,12,19,11,12,12,11,12,12,12,11,12,12,11,2,12,12,11,12,12,11,12,12,12,11,12,12,12,1 },
		{ 1,12,12,12,12,12,12,20,11,12,12,11,12,12,12,11,12,12,11,4,12,12,11,12,12,11,12,12,12,11,12,12,12,2 },
		{ 2,12,12,12,12,12,12,12,11,12,12,11,12,12,12,11,12,12,11,12,12,12,11,12,12,11,12,12,12,11,12,12,12,1 },
		{ 1,12,12,12,11,11,11,11,11,12,12,11,12,12,12,11,12,12,11,11,11,11,11,12,12,11,12,12,12,11,12,12,12,2 },
		{ 2,12,12,12,12,12,12,12,11,12,12,11,12,12,12,11,12,12,12,12,12,12,11,12,12,11,12,12,12,11,12,12,12,2 },
		{ 2,12,12,12,12,12,12,12,11,12,12,11,12,12,12,11,12,12,12,12,12,12,11,12,12,11,12,12,12,11,12,12,12,1 },
		{ 1,12,12,12,12,12,12,12,11,12,12,11,2,12,12,11,12,12,12,12,12,12,11,12,12,11,19,12,12,11,12,12,12,2 },
		{ 2,12,12,12,11,11,11,11,11,12,12,11,2,11,11,11,12,12,11,11,11,11,11,12,12,11,19,11,11,11,12,12,12,2 },
		{ 1,12,12,12,12,12,12,12,12,12,12,12,4,12,12,12,12,12,12,12,12,12,12,12,12,12,20,12,12,12,12,12,12,1 },
		{ 1,23,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,23,2 },
		{ 2,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,1 },
		{ 22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22 }
		};
		Sprite* map[18][34];
		for (int i = 0; i < 18; i++) {
			for (int j = 0; j < 34; j++) {
				switch (card[17 - i][j]) {
				case 1:map[17 - i][j] = Sprite::create("1.1.png");
					map[17 - i][j]->setPosition(33 + 60 * j, 35 + 60 * i);
					addChild(map[17 - i][j]); break;
				case 2:map[17 - i][j] = Sprite::create("1.2.png");
					map[17 - i][j]->setPosition(33 + 60 * j, 35 + 60 * i);
					addChild(map[17 - i][j]); break;
				case 3:map[17 - i][j] = Sprite::create("1.3.png");
					map[17 - i][j]->setPosition(33 + 60 * j, 35 + 60 * i);
					addChild(map[17 - i][j]); break;
				case 4:map[17 - i][j] = Sprite::create("1.4.png");
					map[17 - i][j]->setPosition(33 + 60 * j, 35 + 60 * i);
					addChild(map[17 - i][j]); break;
				case 5:map[17 - i][j] = Sprite::create("1.5.png");
					map[17 - i][j]->setPosition(33 + 60 * j, 35 + 60 * i);
					addChild(map[17 - i][j]); break;
				case 6:map[17 - i][j] = Sprite::create("1.6.png");
					map[17 - i][j]->setPosition(33 + 60 * j, 35 + 60 * i);
					addChild(map[17 - i][j]); break;
				case 7:map[17 - i][j] = Sprite::create("1.7.png");
					map[17 - i][j]->setPosition(33 + 60 * j, 35 + 60 * i);
					addChild(map[17 - i][j]); break;
				case 8:map[17 - i][j] = Sprite::create("1.8.png");
					map[17 - i][j]->setPosition(33 + 60 * j, 35 + 60 * i);
					addChild(map[17 - i][j]); break;
				case 9:map[17 - i][j] = Sprite::create("1.9.png");
					map[17 - i][j]->setPosition(33 + 60 * j, 35 + 60 * i);
					addChild(map[17 - i][j]); break;
				case 10:map[17 - i][j] = Sprite::create("1.10.png");
					map[17 - i][j]->setPosition(33 + 60 * j, 35 + 60 * i);
					addChild(map[17 - i][j]); break;
				case 11:map[17 - i][j] = Sprite::create("1.11.png");
					map[17 - i][j]->setPosition(33 + 60 * j, 35 + 60 * i);
					addChild(map[17 - i][j]); break;
				case 12:map[17 - i][j] = Sprite::create("1.12.png");
					map[17 - i][j]->setPosition(33 + 60 * j, 35 + 60 * i);
					addChild(map[17 - i][j]); break;
				case 13:map[17 - i][j] = Sprite::create("1.13.png");
					map[17 - i][j]->setPosition(33 + 60 * j, 35 + 60 * i);
					addChild(map[17 - i][j]); break;
				case 14:map[17 - i][j] = Sprite::create("1.14.png");
					map[17 - i][j]->setPosition(33 + 60 * j, 35 + 60 * i);
					addChild(map[17 - i][j]); break;
				case 15:map[17 - i][j] = Sprite::create("1.15.png");
					map[17 - i][j]->setPosition(33 + 60 * j, 35 + 60 * i);
					addChild(map[17 - i][j]); break;
				case 16:map[17 - i][j] = Sprite::create("1.16.png");
					map[17 - i][j]->setPosition(33 + 60 * j, 35 + 60 * i);
					addChild(map[17 - i][j]); break;
				case 17:map[17 - i][j] = Sprite::create("1.17.png");
					map[17 - i][j]->setPosition(33 + 60 * j, 35 + 60 * i);
					addChild(map[17 - i][j]); break;
				case 18:map[17 - i][j] = Sprite::create("1.18.png");
					map[17 - i][j]->setPosition(33 + 60 * j, 35 + 60 * i);
					addChild(map[17 - i][j]); break;
				case 19:map[17 - i][j] = Sprite::create("1.19.png");
					map[17 - i][j]->setPosition(33 + 60 * j, 35 + 60 * i);
					addChild(map[17 - i][j]); break;
				case 20:map[17 - i][j] = Sprite::create("1.20.png");
					map[17 - i][j]->setPosition(33 + 60 * j, 35 + 60 * i);
					addChild(map[17 - i][j]); break;
				case 21:map[17 - i][j] = Sprite::create("1.21.png");
					map[17 - i][j]->setPosition(33 + 60 * j, 35 + 60 * i);
					addChild(map[17 - i][j]); break;
				case 22:map[17 - i][j] = Sprite::create("1.22.png");
					map[17 - i][j]->setPosition(33 + 60 * j, 35 + 60 * i);
					addChild(map[17 - i][j]); break;
				case 23:map[17 - i][j] = Sprite::create("1.23.png");
					map[17 - i][j]->setPosition(33 + 60 * j, 35 + 60 * i);
					addChild(map[17 - i][j]); break;
				case 24:map[17 - i][j] = Sprite::create("1.24.png");
					map[17 - i][j]->setPosition(33 + 60 * j, 35 + 60 * i);
					addChild(map[17 - i][j]); break;
				}
			}
		}
	}

}
void GameMap::addBarrier(GameScene* scene) {
	if(mapNumber == 6) {



		int card2[18][34] = {
		{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
		{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
		{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
		{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
		{0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
		{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
		{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
		{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
		{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
		{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
		{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
		{0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0},
		{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
		{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
		{0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0},
		{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
		{0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0},
		{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0}
		};
		Sprite* secmap[18][34];
		for (int i = 0;i < 18;i++) {
			for (int j = 0;j < 34;j++) {
				switch (card2[17 - i][j]) {
				case 1:secmap[17 - i][j] = Sprite::create("1.1.png");
					secmap[17 - i][j]->setPosition(33 + 60 * j, 35 + 60 * i);
					scene->addChild(secmap[17 - i][j]);break;
				case 2:secmap[17 - i][j] = Sprite::create("1.24.png");
					secmap[17 - i][j]->setPosition(33 + 60 * j, 35 + 60 * i);
					scene->addChild(secmap[17 - i][j]);break;
				case 3:secmap[17 - i][j] = Sprite::create("1.19.png");
					secmap[17 - i][j]->setPosition(33 + 60 * j, 35 + 60 * i);
					scene->addChild(secmap[17 - i][j]);break;
				

				}
			}
		}




	}
	if (mapNumber == 5) {
		int card2[18][34] = {
		{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
		{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
		{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
		{0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
		{0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
		{0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
		{0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0},
		{0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
		{0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
		{0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
		{0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
		{0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
		{0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
		{0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
		{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
		{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
		{0,3,1,3,1,1,3,1,1,1,1,1,1,3,1,1,1,1,1,3,1,1,1,1,3,1,1,1,1,3,1,3,1,0},
		{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0}
		};
		Sprite* secmap[18][34];
		for (int i = 0;i < 18;i++) {
			for (int j = 0;j < 34;j++) {
				switch (card2[17 - i][j]) {
				case 1:secmap[17 - i][j] = Sprite::create("1.1.png");
					secmap[17 - i][j]->setPosition(33 + 60 * j, 35 + 60 * i);
					scene->addChild(secmap[17 - i][j]);break;
				case 2:secmap[17 - i][j] = Sprite::create("1.19.png");
					secmap[17 - i][j]->setPosition(33 + 60 * j, 35 + 60 * i);
					scene->addChild(secmap[17 - i][j]);break;
				case 3:secmap[17 - i][j] = Sprite::create("1.2.png");
					secmap[17 - i][j]->setPosition(33 + 60 * j, 35 + 60 * i);
					scene->addChild(secmap[17 - i][j]);break;

				}
			}
		}




	}
	if (mapNumber==3) {
		
		

		int card2[18][34] = {
		{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
		{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
		{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
		{0,0,0,0,4,4,4,4,4,4,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
		{0,0,0,0,4,4,4,4,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,4,4,4,4,4,4,4,0,0,0,0},
		{0,0,0,0,4,4,4,4,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,4,0,0,0,0},
		{0,0,0,0,4,4,4,4,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,4,0,0,0,0},
		{0,0,0,0,4,0,0,0,0,0,4,0,0,0,4,0,0,0,0,4,0,0,0,0,0,0,0,0,0,4,0,0,0,0},
		{0,0,0,0,4,0,0,0,0,0,4,0,0,0,4,0,0,0,0,4,0,0,0,0,0,0,0,0,0,4,0,0,0,0},
		{0,0,0,0,4,0,0,0,0,0,4,0,0,0,4,0,0,0,0,4,4,4,4,4,4,4,0,0,0,4,0,0,0,0},
		{0,0,0,0,4,0,0,4,4,4,4,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0},
		{0,0,0,0,0,0,0,4,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0},
		{0,0,0,0,0,0,0,4,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0},
		{0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0},
		{0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0},
		{0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0},
		{0,1,1,1,1,1,2,1,2,1,1,2,2,1,2,2,1,2,1,2,2,2,1,2,2,1,2,1,2,2,2,2,2,0},
		{0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,0}
		};
		Sprite* secmap[18][34];
		for (int i = 0;i < 18;i++) {
			for (int j = 0;j < 34;j++) {
				switch (card2[17 - i][j]) {
				case 1:secmap[17 - i][j] = Sprite::create("2.png");
					secmap[17 - i][j]->setPosition(33 + 60 * j, 35 + 60 * i);
					scene->addChild(secmap[17 - i][j]);break;
				case 2:secmap[17 - i][j] = Sprite::create("1.png");
					secmap[17 - i][j]->setPosition(33 + 60 * j, 35 + 60 * i);
					scene->addChild(secmap[17 - i][j]);break;
				case 3:secmap[17 - i][j] = Sprite::create("5.png");
					secmap[17 - i][j]->setPosition(33 + 60 * j, 35 + 60 * i);
					scene->addChild(secmap[17 - i][j]);break;
				case 4:secmap[17 - i][j] = Sprite::create("13.png");
					secmap[17 - i][j]->setPosition(33 + 60 * j, 35 + 60 * i);
					scene->addChild(secmap[17 - i][j]);break;

				}
			}
		}
		



	}
	if (mapNumber == 4) {
		int card2[18][34] = {
		{ 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 },
		{ 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 },
		{ 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 },
		{ 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 },
		{ 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 },
		{ 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 },
		{ 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 },
		{ 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 },
		{ 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 },
		{ 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 },
		{ 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 },
		{ 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 },
		{ 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 },
		{ 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 },
		{ 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 },
		{ 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 },
		{ 0,1,1,1,1,1,2,1,2,1,1,2,2,1,2,2,1,2,1,2,2,2,1,2,2,1,2,1,2,2,2,2,2,0 },
		{ 0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,0 }
		};
		Sprite* secmap[18][34];
		for (int i = 0;i < 18;i++) {
			for (int j = 0;j < 34;j++) {
				switch (card2[17 - i][j]) {
				case 1:secmap[17 - i][j] = Sprite::create("2.png");
					secmap[17 - i][j]->setPosition(33 + 60 * j, 35 + 60 * i);
					scene->addChild(secmap[17 - i][j]);break;
				case 2:secmap[17 - i][j] = Sprite::create("1.png");
					secmap[17 - i][j]->setPosition(33 + 60 * j, 35 + 60 * i);
					scene->addChild(secmap[17 - i][j]);break;
				case 3:secmap[17 - i][j] = Sprite::create("5.png");
					secmap[17 - i][j]->setPosition(33 + 60 * j, 35 + 60 * i);
					scene->addChild(secmap[17 - i][j]);break;
				}
			}
		}
	}
	if (mapNumber ==1) {
		Sprite* wall[34];
		for (int i = 0;i < 34;i++) {
			wall[i] = Sprite::create("27.wall1.png");
			wall[i]->setPosition(33 + 60 * i, 35 + 30);
			scene->addChild(wall[i]);
		}



		int card2[18][34] = {
		{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
		{0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
		{0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
		{0,0,0,1,0,0,0,0,0,0,0,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0},
		{0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,3,0,0,0},
		{0,0,0,0,0,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,2,0,0,0},
		{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,2,0,0,0,0,0,0,3,0,0,0},
		{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,3,3,3,2,2,3,3,2,0,0,0},
		{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,2,3,3,2,2,3,3,2,0,0,0},
		{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,3,0,0,0,0,0,0,2,0,0,0},
		{0,0,0,0,0,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,3,2,0,0,0,0,0,0,3,0,0,0},
		{0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,2,0,0,0},
		{0,0,0,1,0,0,0,0,0,0,0,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0},
		{0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
		{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
		{0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
		{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
		{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0}
		};
		Sprite* secmap[18][34];
		for (int i = 0;i < 18;i++) {
			for (int j = 0;j < 34;j++) {
				switch (card2[17 - i][j]) {
				case 1:secmap[17 - i][j] = Sprite::create("36.png");
					secmap[17 - i][j]->setPosition(33 + 60 * j, 35 + 60 * i);
					scene->addChild(secmap[17 - i][j]);break;
				case 2:secmap[17 - i][j] = Sprite::create("26.stone2.png");
					secmap[17 - i][j]->setPosition(33 + 60 * j, 35 + 60 * i);
					scene->addChild(secmap[17 - i][j]);break;
				case 3:secmap[17 - i][j] = Sprite::create("24.box2.png");
					secmap[17 - i][j]->setPosition(33 + 60 * j, 35 + 60 * i);
					scene->addChild(secmap[17 - i][j]);break;
				}
			}
		}
	}
	if (mapNumber ==2) {
		Sprite* wall[34];
		for (int i = 0;i < 34;i++) {
			wall[i] = Sprite::create("27.wall1.png");
			wall[i]->setPosition(33 + 60 * i, 35 + 30);
			scene->addChild(wall[i]);
		}

		int card2[18][34] = {
		{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
		{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
		{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
		{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
		{0,0,0,0,0,0,0,0,0,2,1,0,0,0,0,0,0,0,0,0,0,0,0,1,2,0,0,0,0,0,0,0,0,0},
		{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
		{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
		{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
		{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
		{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
		{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
		{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
		{0,0,0,0,0,0,0,0,0,1,2,0,0,0,0,0,0,0,0,0,0,0,0,2,1,0,0,0,0,0,0,0,0,0},
		{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
		{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
		{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
		{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
		{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0}
		};
		Sprite* secmap[18][34];
		for (int i = 0;i < 18;i++) {
			for (int j = 0;j < 34;j++) {
				switch (card2[17 - i][j]) {
				case 2:secmap[17 - i][j] = Sprite::create("26.stone2.png");
					secmap[17 - i][j]->setPosition(33 + 60 * j, 35 + 60 * i);
					scene->addChild(secmap[17 - i][j]);break;
				case 1:secmap[17 - i][j] = Sprite::create("24.box2.png");
					secmap[17 - i][j]->setPosition(33 + 60 * j, 35 + 60 * i);
					scene->addChild(secmap[17 - i][j]);break;
				}
			}
		}
	}
}

		
	



